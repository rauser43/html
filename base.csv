date;title;link;text
2022-02-22;FastAPI, asyncio и multiprocessing;http://khashtamov.com/ru/fastapi-asyncio-multiprocessing/;Недавно товарищ поделился со мной ссылкой на статью про FastAPI и кооперативную мультипоточность. В ней автор, во-первых, ссылается на исследование другого автора про сравнение производительности между синхронными и асинхронными Python фреймворками. А во-вторых, приводит личный пример падения производительности приложения и как итог значительного увеличение задержки ответов от сервера.
2022-02-16;AMP: шаблон личного кабинета на базе FastAPI;https://habr.com/ru/post/651903/?utm_campaign=651903&utm_source=habrahabr&utm_medium=rss;Опубликовал в публичном доступе свой маленький проект AMP. AMP — это шаблон «админки» на базе FastAPI. В качестве ORM использую peewee, в шаблонах bootstrap и графическую библиотеку C3(на базе D4). В AMP существует механизм авторизации пользователей (это ж админка), группы пользователей, локализация (английский и русский языки), установка часовых поясов. В статье покажу Вам, как это выглядит с экрана десктопа, мобильного устройства, небольшое демо(видео), дам ссылку на репозиторий, ну и конечно отвечу на вопрос «К чему нам еще одна админка ?».
2021-12-15;Использование Ariadne и его интеграция c FastAPI и Starlette;https://habr.com/ru/post/595777/?utm_campaign=595777&utm_source=habrahabr&utm_medium=rss;С недавнего времени в Starlette прекращена поддержка GraphQL. Так что если вы, как и мы, занимались разработкой сервиса на FastAPI, то обновления до последней версии Starlette вас неприятно удивили.
2021-12-08;Почему наш стартап переехал с Flask на FastAPI;https://habr.com/ru/post/575958/?utm_campaign=575958&utm_source=habrahabr&utm_medium=rss;Как так оказалось, что стартап решил поменять стек? Это же затраты и все возникающие при этом сложности переезда. Но если хочешь получить короткий, эргономичный, хорошо читаемый код, приходится идти на жертвы. Но давайте по порядку.
2021-11-10;Денис Аникин. FastAPI как основной framework для python бекендов;https://www.youtube.com/watch?v=4zjj1aHJoko;FastAPI уже не первый год с нами. Последние пару лет фреймворк явно на подъеме: количество звезд на гитхабе уже больше чем 50% от мастодонтов рынка — django, flask. В ds среде и в каждом туториале flask, в каждой второй вакансии суперсовременные горизонтально масштабируемые сервисы на… django. Однако, про fastapi разговоров довольно немного и проникновение как в рынок, так и в публичное пространство у него не велико. И уж тем более, пока ещё про него не говорили с позиции продакшена (как минимум, на конференциях). Так сложилось, что в банке мы сделали на нем несколько десятков сервисов и уже больше года активно эксплуатируем как раз в том самом продакшене, а так же рекомендуем его внутри, как основной, практически всем. За это время мы успели полюбить этот фреймворк, но при этом нашли его «зоны роста». В своем докладе я постараюсь раскрыть три темы: сделаю краткий обзор на сам фреймворк поделюсь тем, чего ему не хватает для полноценной жизни в продакшене (с моей точки зрения) подсвечу довольно очевидные потенциальные проблемы. Ну и, конечно же, займусь неймдроппингом: FastAPI!
2021-10-07;Как написать генератор изображений, который вас понимает;https://habr.com/ru/post/581794/?utm_campaign=581794&utm_source=habrahabr&utm_medium=rss;Автор статьи рассказывает, как за неделю создал Text2Art.com — генератор изображений на основе VQGAN+CLIP, способный рисовать пиксель-арт и живопись, а также изображать то, что вы напишите в текстовом поле. Для интерфейса используется Gradio, модель работает на сервере FastAPI, а системой очереди сообщений служит Firebase. Подробностями делимся к старту курса по ML и DL.
2021-09-30;Как настроить SQLAlchemy, SQLModel и Alembic для асинхронной работы с FastAPI;https://habr.com/ru/post/580866/?utm_campaign=580866&utm_source=habrahabr&utm_medium=rss;В этом руководстве предполагается, что у вас есть опыт работы с FastAPI и Postgres с помощью Docker. Вам нужна помощь, чтобы ускорить работу с FastAPI, Postgres и Docker? Начните со следующих ресурсов:
2021-09-20;Python микросервисы с Kafka без боли;https://habr.com/ru/post/578916/?utm_campaign=578916&utm_source=habrahabr&utm_medium=rss;В этой статье я бы хотел поделиться способом написания асинхронных микросервисов на Python, общающихся друг с другом через Kafka. В основе этих микросервисов лежит библиотека потоковой обработки  Faust. Но Faust - это не только работа с Kafka, он также содержит HTTP-сервер и планировщик для выполнения задач с определенным интервалом или по расписанию.Несмотря на то, что в тестовом проекте используются такие инструменты и библиотеки, как FastAPI, Grafana, Prometheus, основная речь пойдет о Faust.
2021-08-31;JSON-Logger для FastAPI;https://habr.com/ru/post/575454/?utm_campaign=575454&utm_source=habrahabr&utm_medium=rss;Пошаговая инструкция, как я сделал собственный асинхронный json-logger для FastApi и зачем.  Цель данной статьи и моей личной разработки - написать о том, как я придумал свой собственный и удобный формат json-журналирования специально для компании, в которой я работаю, но не нашел готовых решений для реализации, который позволит мне воплощать очень гибко и удобно некоторые вещи с единым наименованием полей, чтобы логгирование протекало быстро и асинхронно, а также: не заставляло бы меня писать много кода и обойтись одной-двумя библиотеками максимум.
2021-08-24;Принимаем на работу брокера для Celery: подбор, аджаст и выкатка;https://habr.com/ru/post/551432/?utm_campaign=551432&utm_source=habrahabr&utm_medium=rss;У Яндекса много самописных сервисов для внутренних задач: Яндекс.Формы, Яндекс.Диск, трекер, календарь. Со временем их решили использовать не только внутри компании, но и за ее пределами. Так появилась платформа Яндекс.Коннект.Большинство сервисов Коннекта построено на Python V3. В качестве web-фреймворка используется Django, реже Flask и Tornado, а новые чаще пишутся на FastAPI. Сервисы, как и базы PostgreSQL, MySQL и MongoDB, живут в облаке. В качестве очереди сообщений почти везде используется Celery с MongoDB в качестве брокера. Он и стал проблемой.
2021-08-06;The Real Python Podcast – Episode #72: Starting With FastAPI and Examining Python's Import System;https://realpython.com/podcasts/rpp/72/;
2021-07-14;Use FastAPI to Build Web APIs;https://realpython.com/fastapi-python-web-apis/;
2021-07-07;Moscow Python Podcast. Переход с Flask на FastAPI (level: all);https://www.youtube.com/watch?v=7Xk1ysONIm8;В гостях у Moscow Python Podcast CTO и со-основатель компании Datafold Александр Морозов. Обсудили с Александром причины перехода его стартапа с Flask на FastAPI.
2021-07-05;Будущее аннотаций типов в Python;https://habr.com/ru/post/566200/?utm_campaign=566200&utm_source=habrahabr&utm_medium=rss;Аннотации в Python прошли этап от необязательной, экспериментальной возможности добавления метаданных до широко используемого инструмента. Хотя изначально большинство разработчиков использовало их лишь для статического анализа кода (mypy, Pylance), некоторые энтузиасты нашли им применение и в период выполнения (runtime) программы (Pydantic, eforce, FastAPI).Однако перед релизом Python 3.10 разработчики этих библиотек забили тревогу, будущее использование аннотаций в период выполнения программы оказалось под угрозой.Приглашаю всех, кому интересно будущее подсказок типов в Python, к прочтению данной статьи.
2021-06-16;Разработчик популярного веб-фреймворка FastAPI — об истории его создания и перспективах аннотаций типов Python;https://habr.com/ru/post/562948/?utm_campaign=562948&utm_source=habrahabr&utm_medium=rss;Python-девелопер и писатель Рики Уайт взял интервью у Себастьяна Рамиреса, разработчика из Explosion AI. Но Себастьян не просто разработчик, это заметная фигура в open source сообществе, создатель популярных фреймворков FastAPI и Typer. В основном речь шла про широкие возможности применения аннотаций типов Python, историю создания фреймворка FastAPI и его дальнейшее развитие. Кроме того, Себастьян рассказал о своих планах по работе над другими open source проектами. Без лишних слов, давайте перейдем к интервью.
2021-05-08;Talk Python to Me: #315 Awesome FastAPI extensions and add ons;https://talkpython.fm/episodes/show/315/awesome-fastapi-extensions-and-add-ons;Audio
2021-03-04;Python Bytes: #223 Beware: A ninja is shadowing Sebastian from FastAPI;https://pythonbytes.fm/episodes/show/223/beware-a-ninja-is-shadowing-sebastian-from-fastapi;Audio
2021-02-08;Workshop: пишем первый проект на FastAPI;https://youtu.be/W6aqCFJp7Xo;Иван Гончарук из Antida software рассказывает про библиотеку Pydantic и показывает, как быстро и просто создавать Web API, используя современные возможности Python. Воркшоп подойдёт как для начинающих разработчиков, так и для специалистов с опытом, не знакомых с технологией FastAPI.
2021-01-11;Implementing FastAPI services – Abstraction and separation of concerns;https://camillovisini.com/article/abstracting-fastapi-services/;
2020-11-18;FastAPI + Dependency Injector;https://habr.com/ru/post/528634/;Статья о интеграции FastAPI и Dependency Injector. Пример использования и тестирования.
2020-11-14;Python Bytes: #207 FastAPI as a web platform (not just APIs);https://pythonbytes.fm/episodes/show/207/fastapi-as-a-web-platform-not-just-apis;
2020-10-04;Talk Python to Me: #284 Modern and fast APIs with FastAPI;https://talkpython.fm/episodes/show/284/modern-and-fast-apis-with-fastapi;Audio
2020-07-21;Почему стоит начать использовать FastAPI прямо сейчас;https://habr.com/ru/post/511840/?utm_campaign=511840&utm_source=habrahabr&utm_medium=rss;
2020-07-03;Test and Code: 120: FastAPI & Typer - Sebastián Ramírez;https://testandcode.com/120;Audio
2020-04-20;Podcast.__init__: Build The Next Generation Of Python Web Applications With FastAPI;https://www.pythonpodcast.com/fastapi-web-application-framework-episode-259/;Audio
2020-02-15;Знакомство с FastAPI;https://habr.com/ru/post/488468/?utm_campaign=488468&utm_source=habrahabr&utm_medium=rss;FastAPI — это фреймворк для создания лаконичных и довольно быстрых HTTP API-серверов со встроенными валидацией, сериализацией и асинхронностью, что называется, из коробки. Стоит он на плечах двух других фреймворков: работой с web в FastAPI занимается Starlette, а за валидацию отвечает Pydantic.Комбайн получился легким, неперегруженным и более, чем достаточным по функционалу.
2019-12-03;Почему Вы должны попробовать FastAPI?;https://habr.com/ru/post/478620/?utm_campaign=478620&utm_source=habrahabr&utm_medium=rss;FastAPI — относительно новый веб-фреймворк, написанный на языке программирования Python для создания REST (а если сильно постараться то и GraphQL) API, основанный на новых возможностях Python 3.6+, таких как: подсказки типов (type-hints), нативная асинхронность (asyncio). Помимо всего прочего, FastAPI плотно интегрируется с OpenAPI-schema и автоматически генерирует документацию для вашего API посредством Swagger и ReDoc
2019-07-26;fastapi - FastAPI framework, high performance, easy to learn, fast to code, ready for production;https://github.com/tiangolo/fastapi;
2019-03-14;fastapi - API framework;http://github.com/tiangolo/fastapi;
